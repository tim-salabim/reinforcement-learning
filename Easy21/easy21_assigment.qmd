---
title: "Easy21"
author: "Tim Appelhans"
format: html
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
```

# Reinforcement Learning Assignment: Easy21

In this document we develop a solution for the [Easy21](https://www.davidsilver.uk/wp-content/uploads/2020/03/Easy21-Johannes.pdf) assignment of the course.

## Setup - draw card

The rules outlined in the assignment for the card draw are:

* The game is played with an infinite deck of cards (i.e. cards are sampled with replacement)
* Each draw from the deck results in a value between 1 and 10 (uniformly distributed) with a colour of red (probability 1/3) or black (probability 2/3).
* There are no aces or picture (face) cards in this game

### R

```{r r-draw}
values = 1:10
colors = c("red", "black", "black")

drawCard = function(color) {
  val = sample(values, 1)
  if (missing(color)) {
    color = sample(colors, 1)
  }
  
  if (color == "red") {
    val = -val
  }
  
  return(val)
}

drawCard("black")
drawCard("red")
replicate(10, drawCard())
```

### Python

```{python py-draw}
import random

values = range(1, 11)
colors = ["red", "black", "black"]

def drawCard(color=None):
  val = random.sample(values, 1).pop()

  if color is None:
    color = random.sample(colors, 1).pop()
  
  if color == "red":
    val = val * -1
  
  return val

drawCard("black")
drawCard("red")

cards = [drawCard("black")]
for i in range(9):
  cards.append(drawCard())

cards
```

## Setup - hit or stick

The rules of the game are:

* At the start of the game both the player and the dealer draw one black card (fully observed)
* Each turn the player may either stick or hit
* If the player hits then she draws another card from the deck
* If the player sticks she receives no further cards
* The values of the playerâ€™s cards are added (black cards) or subtracted (red cards)

### R

```{r r-hit}
hit = function(cards) {
  new_card = drawCard()
  c(cards, new_card)
}

# start
cards = drawCard("black")
cards

# hit
hit(cards)
```
